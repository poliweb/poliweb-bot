require('dotenv').config()
const { Telegraf, Markup, Extra } = require('telegraf')



/**
 * –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–æ–∫–∏–Ω–∞
 */
const bot = new Telegraf(process.env.BOT_TOKEN)

// bot.use(Telegraf.log())


/**
 * Commands for bot
 */

// console.log(Markup.inlineKeyboard)
// console.log(Telegraf)

/**
 * Command Start
 */

 bot.command('start', (ctx) => {
    return [
        ctx.replyWithHTML(`
<b>‚úã –ü—Ä–∏–≤–µ—Ç!</b>
<i>–ñ–º–∏ –Ω–∞ –º–µ–Ω—é –≤–æ–∑–ª–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –∏ –ø–æ–ª—É—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ PoliWeb Developer</i>

<i>–ò–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –±—ã—Å—Ç—Ä—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å —á–∞—Ç-–±–æ—Ç–æ–º</i>

| –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç–∞—Ä—Ç–∞ - /start
| –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ - /portfolio
| –ö—Ç–æ –Ø - /about
| –ö–æ–Ω—Ç–∞–∫—Ç—ã - /contact
| –ü–æ–º–æ—â—å - /help

<b>–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è</b> —Å–ª–µ–¥–∏—Ç—å –∑–∞ –±—ã—Å—Ç—Ä—ã–º —Ä–∞–∑–≤–∏—Ç–∏–µ–º <b>–ò–¢-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π</b>, –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤ –∫—É—Ä—Å–µ —Å–æ–±—ã—Ç–∏–π –∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —É–ª—É—á—à–∞—Ç—å —Å–≤–æ–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.

<b>–§—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞ –Ω–∞ JS –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç-–±–æ—Ç–∞</b>
–ú–æ—è —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è  - <i>–æ–±—É—á–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≤—Å–µ–π –∂–∏–∑–Ω–∏</i>
<code>
bot.command('help', (ctx) => {
    return ctx.reply('–≠—Ç–æ help')
})
</code>
    `),
    ctx.replyWithPhoto({url: 'https://res.cloudinary.com/poliweb/image/upload/v1659345878/PoliWebStartUpScvear_ax3px5.webp'}),
]
})

/**
 * Command Help
*/
bot.command('help', (ctx) => {
    return [
        ctx.reply('–≠—Ç–æ help'),

    ]
})
bot.command('contact', (ctx) => {
    return ctx.reply('–≠—Ç–æ contact')
})
bot.command('about', (ctx) => {
    return ctx.reply('–≠—Ç–æ About')
})

/**
 * Command Portfolio
 */
 bot.command('portfolio', async (ctx) => {
    await ctx.replyWithMarkdown(`
*–≠—Ç–æ –º–æ—ë –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ*
‚úã [PoliWeb on GitHub](https://github.com/poliweb)

–ü–æ—Å–µ—Ç–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–∞–∑—Ä–∞–±–æ—á–∏–∫–∞ –Ω–∞ GitHub.
–í—ã —Ç–∞–º –Ω–∞–π–¥—ë—Ç–µ –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –∏ –ø–æ–ª–µ–∑–Ω–æ–≥–æ.
–ü–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑—Ä–∞–±–æ—á–∏–∫–µ —ç—Ç–æ–≥–æ —á–∞—Ç-–±–æ—Ç–∞

`),
    await ctx.replyWithMediaGroup([
        {
            media: { url: 'https://res.cloudinary.com/poliweb/image/upload/c_scale,w_1000/v1640408444/HadeBaner_hikeag.webp' },
            caption: 'Piped from URL 1',
            type: 'photo'
        },
        {
            media: { url: 'https://res.cloudinary.com/poliweb/image/upload/c_scale,g_center,w_1000/v1639997472/screnshot1_woginx.webp' },
            caption: 'Piped from URL 2',
            type: 'photo'
        },
        {
            media: { url: 'https://res.cloudinary.com/poliweb/image/upload/c_scale,w_1000/v1640060314/poliweb-dev-to_tp9bpw.webp' },
            caption: 'Piped from URL 3',
            type: 'photo'
        },
        {
            media: { url: 'https://res.cloudinary.com/poliweb/image/upload/c_scale,w_1000/v1639997474/screnshot2_axudbj.webp' },
            caption: 'Piped from URL 4',
            type: 'photo'
        }
    ]),
    await ctx.reply('–≠—Ç–æ <b>–ú–æ—ë</b> —Å—É–ø–µ—Ä –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ!',
        {   parse_mode: 'HTML',
            ...Markup.inlineKeyboard([
                Markup.button.callback('–ê–ª—å–±–æ–º', 'Albom1'),
                Markup.button.callback('–ê–ª—å–±–æ–º 2', 'Albom2')
            ])
        }
        )
})


/**
 * Action
 */

//  Albom 1
bot.action('Albom1', async(ctx) => {
    await ctx.replyWithMediaGroup([
        {
            media: { url: 'https://picsum.photos/300/500/?random' },
            caption: 'Piped from URL',
            type: 'photo'
        },
        {
            media: { url: 'https://picsum.photos/300/500/?random' },
            caption: 'Piped from URL',
            type: 'photo'
        },
        {
            media: { url: 'https://picsum.photos/300/500/?random' },
            caption: 'Piped from URL',
            type: 'photo'
        },
        {
            media: { url: 'https://picsum.photos/300/500/?random' },
            caption: 'Piped from URL',
            type: 'photo'
        },
    ]),
    await ctx.reply(
        '–ü—Ä–æ—Å–º–æ—Ç—Ä–∏ –ê–ª—å–±–æ–º 2',
        Markup.inlineKeyboard([
            Markup.button.callback('–ê–ª—å–±–æ–º 2', 'Albom2')
        ])
    )
})

//Albom 2
bot.action('Albom2', async (ctx) => {
    await ctx.replyWithMediaGroup([
        {
            media: { url: 'https://picsum.photos/300/500/?random' },
            caption: 'Piped from URL',
            type: 'photo'
        },
        {
            media: { url: 'https://picsum.photos/300/500/?random' },
            caption: 'Piped from URL',
            type: 'photo'
        },
        {
            media: { url: 'https://picsum.photos/300/500/?random' },
            caption: 'Piped from URL',
            type: 'photo'
        },
        {
            media: { url: 'https://picsum.photos/300/500/?random' },
            caption: 'Piped from URL',
            type: 'photo'
        },
    ]),
    await ctx.reply(
        '–ü—Ä–æ—Å–º–æ—Ç—Ä–∏ –ê–ª—å–±–æ–º 1',
        Markup.inlineKeyboard([
            Markup.button.callback('–ê–ª—å–±–æ–º 1', 'Albom1')
        ])
    )
})


/**
 * Start bot
 * –ë–æ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–∞–∫–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
 */
bot.launch().then(() => {
    console.log('BOT_TOKEN: OK üëç')
    console.log('Run Bot. –ë–æ—Ç –∑–∞–ø—É—à–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç üëç')
}).catch((err) => {
    console.log('–û–ø—Å!!! –û—à–∏–±–∫–∞!!! ', err)
})


// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'))
process.once('SIGTERM', () => bot.stop('SIGTERM'))