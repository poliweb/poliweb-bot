require('dotenv').config()
const { Telegraf, Markup } = require('telegraf')

const helpText = require('./const')


/**
 * –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–æ–∫–∏–Ω–∞
 */
const BOT_TOKEN = process.env.BOT_TOKEN
if(BOT_TOKEN === undefined) {
    throw new Error('BOT_TOKEN must be provided! BOT_TOKEN –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω!')
}

/**
 * Authorizing bot - –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
 */
const bot = new Telegraf(process.env.BOT_TOKEN)

// bot.use(Telegraf.log())


/**
 * Commands for bot
 */

/**
 * Command Start
 */

 bot.start(async (ctx) => {
    return [
        await ctx.replyWithHTML(`
<b>‚úã –ü—Ä–∏–≤–µ—Ç, ${ctx.message.from.first_name ? ctx.message.from.first_name : '–ù–µ–∑–Ω–∞–∫–æ–º–µ—Ü'}!</b>
<i>–ñ–º–∏ –Ω–∞ –º–µ–Ω—é –≤–æ–∑–ª–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –∏ –ø–æ–ª—É—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ PoliWeb Developer</i>

<i>–ò–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –±—ã—Å—Ç—Ä—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å —á–∞—Ç-–±–æ—Ç–æ–º</i>

| ‚≠ê | –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç–∞—Ä—Ç–∞ - /start
| üì∏ | –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ - /portfolio
| üéÖ | –ö—Ç–æ –Ø - /about
| üì© | –ö–æ–Ω—Ç–∞–∫—Ç—ã - /contact
| ‚ùì | –ü–æ–º–æ—â—å - /help

<b>–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è</b> —Å–ª–µ–¥–∏—Ç—å –∑–∞ –±—ã—Å—Ç—Ä—ã–º —Ä–∞–∑–≤–∏—Ç–∏–µ–º <b>–ò–¢-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π</b>, –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤ –∫—É—Ä—Å–µ —Å–æ–±—ã—Ç–∏–π –∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —É–ª—É—á—à–∞—Ç—å —Å–≤–æ–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.

<b>–§—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞ –Ω–∞ JS –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç-–±–æ—Ç–∞</b>
–ú–æ—è —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è  - <i>–æ–±—É—á–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≤—Å–µ–π –∂–∏–∑–Ω–∏</i>
<code>
bot.start(async (ctx) => {
    return [
        await ctx.replyWithHTML('‚úã –ü—Ä–∏–≤–µ—Ç!')
    ]
})
</code>
    `),
    await ctx.replyWithPhoto({url: 'https://res.cloudinary.com/poliweb/image/upload/v1659345878/PoliWebStartUpScvear_ax3px5.webp'}, 
    {caption: '–õ–æ–≥–æ—Ç–∏–ø PoliWeb –∏ –∏–ª—é—Å—Ç—Ä–∞—Ü–∏—è SVG - —Ñ–æ—Ä–º–∞—Ç'}),
]
})

/**
 * Command Help
*/
bot.help(async (ctx) => {
    return [
        await ctx.replyWithMarkdown(`
*–≠—Ç–æ help*
_–≠—Ç–æ—Ç —á–∞—Ç-–±–æ—Ç –ø–æ–Ω–∏–º–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:_
`),
// –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ helpText –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏–∑ —Ñ–∞–π–ª–∞ const.js —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É commands
await ctx.reply(helpText.commands),

    ]
})

/**
 * Command Contact
 */
bot.command('contact', (ctx) => {
    return ctx.reply('–≠—Ç–æ contact')
})

/**
 * Command About
 */
bot.command('about', (ctx) => {
    return [
        ctx.replyWithMarkdown(`
_WEB DEVELOPER_
*–ü–ê–í–ï–õ –ü–û–õ–ò–°–¢–û–í–°–ö–ò–ô*

–Ø –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫. –ú–æ—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è - —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞. –ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–∞–π—Ç—ã, –Ω–∞—á–∏–Ω–∞—è —Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞ –≤–µ–±-—Å–∞–π—Ç–∞, –¥–∏–∑–∞–π–Ω–∞ UX / UI –≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–µ FIGMA –¥–æ –ø–æ–ª–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ NETLIFY, HEROKU, —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –æ–±–ª–∞—á–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –î–æ–º–µ–Ω DNS. –ú–æ–∏ –ª—é–±–∏–º—ã–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏ - LARAVEL, VUE, NUXT, TAILWINDCSS –∏ –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ, –∫–æ—Ç–æ—Ä—ã–µ –æ–±–ª–µ–≥—á–∞—é—Ç –∂–∏–∑–Ω—å –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.

–ì–æ—Ç–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞—Ç—å –∫–∞–∫ —Å –∫—Ä—É–ø–Ω—ã–º–∏ –∫–æ–º–ø–∞–Ω–∏—è–º–∏, —Ç–∞–∫ –∏ —Å —á–∞—Å—Ç–Ω—ã–º–∏ –ª–∏—Ü–∞–º–∏ –Ω–∞ –±–µ—Å–ø—Ä–æ–∏–≥—Ä—ã—à–Ω–æ–π –æ—Å–Ω–æ–≤–µ. –Ø –º–æ–≥—É —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ –Ω–∞–¥ –∫—Ä—É–ø–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏, —Ç–∞–∫ –∏ –Ω–∞–¥ –Ω–µ–±–æ–ª—å—à–∏–º–∏ —Å—Ç–∞—Ä—Ç–∞–ø–∞–º–∏. –ì–æ—Ç–æ–≤ —Å—Ç—Ä–æ–∏—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫–∞–∫ –Ω–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ (–ø–æ–ª–Ω—ã–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å), —Ç–∞–∫ –∏ –≤ —Ä–∞–º–∫–∞—Ö –≤–µ–±-–ø—Ä–æ–µ–∫—Ç–∞ —Å —á–∞—Å—Ç–∏—á–Ω–æ–π (—Ñ—Ä–∏–ª–∞–Ω—Å) —Ä–∞–±–æ—Ç–æ–π.

–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Å–ª–µ–¥–∏—Ç—å –∑–∞ –±—ã—Å—Ç—Ä—ã–º —Ä–∞–∑–≤–∏—Ç–∏–µ–º –ò–¢-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤ –∫—É—Ä—Å–µ —Å–æ–±—ã—Ç–∏–π –∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —É–ª—É—á—à–∞—Ç—å —Å–≤–æ–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.

_–ú–æ—è —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è - –æ–±—É—á–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≤—Å–µ–π –∂–∏–∑–Ω–∏_

[–ü–æ–¥—Ä–æ–±–Ω–µ–π –Ω–∞ —Å–∞–π—Ç–µ](https://poliweb.su/)
`)
    ]
})


/**
 * Command Portfolio
 */
 bot.command('portfolio', async (ctx) => {
    await ctx.replyWithMarkdown(`
*üì∏  –≠—Ç–æ –º–æ—ë –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ*

–í –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –ø–æ–¥–æ–±—Ä–∞–Ω—ã –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã —Å–∞–π—Ç–æ–≤.

_–ü–æ—Å–µ—Ç–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–∞–∑—Ä–∞–±–æ—á–∏–∫–∞ –Ω–∞_ [GitHub](https://github.com/poliweb)
_–í—ã —Ç–∞–º –Ω–∞–π–¥—ë—Ç–µ –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –∏ –ø–æ–ª–µ–∑–Ω–æ–≥–æ.
–ü–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ —ç—Ç–æ–≥–æ 
—á–∞—Ç-–±–æ—Ç–∞._

‚úã [PoliWeb on GitHub](https://github.com/poliweb)

`,{disable_web_page_preview: false})
    await ctx.replyWithMediaGroup([
        {
            media: { url: 'https://res.cloudinary.com/poliweb/image/upload/c_scale,w_1000/v1659491161/Portfolio/slade_7_hfdov0.webp' },
            caption: '–°–ª–∞–π–¥ 1',
            type: 'photo'
        },
        {
            media: { url: 'https://res.cloudinary.com/poliweb/image/upload/c_scale,w_1000/v1659491158/Portfolio/slade_5_t8yznw.webp' },
            caption: '–°–ª–∞–π–¥ 2',
            type: 'photo'
        },
        {
            media: { url: 'https://res.cloudinary.com/poliweb/image/upload/c_scale,w_1000/v1659491298/Portfolio/slade_8_zjghsg.webp' },
            caption: '–°–ª–∞–π–¥ 3',
            type: 'photo'
        },
        {
            media: { url: 'https://res.cloudinary.com/poliweb/image/upload/c_scale,w_1000/v1659491158/Portfolio/slade_6_n8yjbh.webp' },
            caption: '–°–ª–∞–π–¥ 4',
            type: 'photo'
        }
    ]),
    await ctx.reply('–≠—Ç–æ <b>–ú–æ—ë —Å—É–ø–µ—Ä –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ!</b> –ü—Ä–æ—Å–º–æ—Ç—Ä–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ê–ª—å–±–æ–º 1, –ê–ª—å–±–æ–º 2 –∏ –ê–ª—å–±–æ–º 3',
        {   parse_mode: 'HTML',
            ...Markup.inlineKeyboard([
                [Markup.button.callback('–ê–ª—å–±–æ–º 1', 'Albom_1'),  Markup.button.callback('–ê–ª—å–±–æ–º 2', 'Albom_2')],
                [Markup.button.callback('–ê–ª—å–±–æ–º 3', 'Albom_3')]
            ])
        }
        )
})


/**
 * Action
 */

//  Albom 1
bot.action('Albom_1', async (ctx) => {
    try {
        await ctx.replyWithMarkdown(`
–ê–ª—å–±–æ–º 1 *–°–ª–∞–π–¥–µ—Ä –¥–ª—è —Å–∞–π—Ç–∞*
        `)
        await ctx.replyWithMediaGroup([{
                    media: {
                        url: 'https://res.cloudinary.com/poliweb/image/upload/c_scale,w_1000/v1659487339/Portfolio/mars_3_pydzo2.webp'
                    },
                    caption: 'My Mars Expedition 1',
                    type: 'photo'
                },
                {
                    media: {
                        url: 'https://res.cloudinary.com/poliweb/image/upload/c_scale,w_1000/v1659486719/Portfolio/mars_1_du0jzm.webp'
                    },
                    caption: 'My Mars Expedition 2',
                    type: 'photo'
                },
                {
                    media: {
                        url: 'https://res.cloudinary.com/poliweb/image/upload/c_scale,w_1000/v1659486716/Portfolio/mars_2_de3qea.webp'
                    },
                    caption: 'My Mars Expedition 3',
                    type: 'photo'
                },
                {
                    media: {
                        url: 'https://res.cloudinary.com/poliweb/image/upload/c_scale,w_1000/v1659487342/Portfolio/mars_4_koumbw.webp'
                    },
                    caption: 'My Mars Expedition 4',
                    type: 'photo'
                },
            ]),
            await ctx.replyWithMarkdown(`
            –î–µ–º–æ —Å–∞–π—Ç–∞: [My Mars Expedition](https://mymarsexpedition.netlify.app)
            `,
            {disable_web_page_preview: true}),
            await ctx.replyWithMarkdown(
                `–ü—Ä–æ—Å–º–æ—Ç—Ä–∏ –µ—â—ë *–ê–ª—å–±–æ–º—ã* `,
                Markup.inlineKeyboard([
                    [Markup.button.callback('–ê–ª—å–±–æ–º 2', 'Albom_2'), Markup.button.callback('–ê–ª—å–±–æ–º 3', 'Albom_3')]
                ])
            )
    } catch (e) {
        console.error(e)
    }
})

//Albom 2
bot.action('Albom_2', async (ctx) => {
    try {
        await ctx.replyWithMarkdown(`–ê–ª—å–±–æ–º 2 *–ü—Ä–æ—Ç–∞—Ç–∏–ø —Å–∞–π—Ç–∞*`)
        await ctx.replyWithMediaGroup([{
                    media: {
                        url: 'https://res.cloudinary.com/poliweb/image/upload/v1659786470/Portfolio/DevTo2_mivecv.webp'
                    },
                    caption: '–ü—Ä–æ—Ç–∞—Ç–∏–ø —Å–∞–π—Ç Dev To ',
                    type: 'photo'
                },
                {
                    media: {
                        url: 'https://res.cloudinary.com/poliweb/image/upload/c_scale,w_1000/v1659488383/Portfolio/site_1_rfkea6.webp'
                    },
                    caption: '–ü—Ä–æ—Ç–∞—Ç–∏–ø —Å–∞–π—Ç –ª–µ–Ω–¥–∏–Ω–≥',
                    type: 'photo'
                },
                {
                    media: {
                        url: 'https://res.cloudinary.com/poliweb/image/upload/c_scale,w_1000/v1659488713/Portfolio/site_2_xmcmi2.webp'
                    },
                    caption: '–ü—Ä–æ—Ç–∞—Ç–∏–ø —Å–∞–π—Ç –ª–µ–Ω–¥–∏–Ω–≥ 2',
                    type: 'photo'
                },
                {
                    media: {
                        url: 'https://res.cloudinary.com/poliweb/image/upload/v1659785575/Portfolio/Nike1_tb532o.webp'
                    },
                    caption: '–ü—Ä–æ—Ç–∞—Ç–∏–ø —Å–∞–π—Ç –ú–æ–¥–µ–ª–∏ 1',
                    type: 'photo'
                },
            ])
            await ctx.replyWithHTML('<b>–î–µ–º–æ —Å–∞–π—Ç–∞:</b> <a href="http://devto.poliweb.kz/">DevTo.poliweb.kz</a>', 
            {disable_web_page_preview: true})
            await ctx.replyWithMarkdown(
                '–ü—Ä–æ—Å–º–æ—Ç—Ä–∏ –µ—â—ë *–ê–ª—å–±–æ–º—ã*',
                Markup.inlineKeyboard([
                    [Markup.button.callback('–ê–ª—å–±–æ–º 1', 'Albom_1'), Markup.button.callback('–ê–ª—å–±–æ–º 3', 'Albom_3')]
                ])
            )
    } catch (e) {
        console.error(e)
    }

})

// Albom 3
bot.action('Albom_3', async (ctx) => {
    try {
        await ctx.replyWithMarkdown(`
–ê–ª—å–±–æ–º 3 
_C–∞–π—Ç:_ *Fashion Models*`)
        await ctx.replyWithMediaGroup([
            {
                media: {
                    url: 'https://res.cloudinary.com/poliweb/image/upload/v1659785725/Portfolio/pw-model-agency4_short_hbboqp.webp'
                },
                caption: '–ü—Ä–æ—Ç–∞—Ç–∏–ø —Å–∞–π—Ç Fashion Models 1',
                type: 'photo'
            },
            {
                media: {
                    url: 'https://res.cloudinary.com/poliweb/image/upload/v1659785576/Portfolio/pw-model-agency1_short_f7ztqy.webp'
                },
                caption: '–ü—Ä–æ—Ç–∞—Ç–∏–ø —Å–∞–π—Ç Fashion Models 2',
                type: 'photo'
            },
            {
                media: {
                    url: 'https://res.cloudinary.com/poliweb/image/upload/v1659785575/Portfolio/pw-model-agency2_short_jiljzs.webp'
                },
                caption: '–ü—Ä–æ—Ç–∞—Ç–∏–ø —Å–∞–π—Ç Fashion Models 3',
                type: 'photo'
            },
            {
                media: {
                    url: 'https://res.cloudinary.com/poliweb/image/upload/v1659785572/Portfolio/pw-model-agency3_short_zabms5.webp'
                },
                caption: '–ü—Ä–æ—Ç–∞—Ç–∏–ø —Å–∞–π—Ç Fashion Models 4',
                type: 'photo'
            },
        ])
        await ctx.replyWithHTML('<b>–î–µ–º–æ —Å–∞–π—Ç–∞:</b> <a href="https://pw-model-agency.netlify.app/">Fashion Models</a>', 
            {disable_web_page_preview: true})
            await ctx.replyWithMarkdown(
                '–ü—Ä–æ—Å–º–æ—Ç—Ä–∏ –µ—â—ë *–ê–ª—å–±–æ–º—ã*',
                Markup.inlineKeyboard([
                    [Markup.button.callback('–ê–ª—å–±–æ–º 1', 'Albom_1'), Markup.button.callback('–ê–ª—å–±–æ–º 2', 'Albom_2')]
                ])
            )
    }catch(e){
        console.error(e)
    }
})


/**
 * Test Code
 */
//  bot.command('pyramid', (ctx) => {
//     return ctx.reply(
//       'Keyboard wrap',
//       Markup.keyboard(['one', 'two', 'three', 'four', 'five', 'six', 'Albom_1'], {
//         wrap: (btn, index, currentRow) => currentRow.length >= (index + 1) / 3
//       })
//     )
//   })
  

/**
 * Start bot
 * –ë–æ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–∞–∫–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
 */
bot.launch().then((res) => {
    console.log('BOT_TOKEN: OK üëç')
    console.log('Run Bot. –ë–æ—Ç –∑–∞–ø—É—à–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç üëç')
}).catch((err) => {
    console.log('–û–ø—Å!!! –û—à–∏–±–∫–∞!!! ', err)
})


// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'))
process.once('SIGTERM', () => bot.stop('SIGTERM'))